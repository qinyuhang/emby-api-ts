/**
 * Emby Server API
 * Explore the Emby Server API
 *
 * OpenAPI spec version: 4.4.0.11
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { BaseItemPerson } from './baseItemPerson';
import { ChapterInfo } from './chapterInfo';
import { ExternalUrl } from './externalUrl';
import { MediaSourceInfo } from './mediaSourceInfo';
import { MediaStream } from './mediaStream';
import { MediaUrl } from './mediaUrl';
import { NameIdPair } from './nameIdPair';
import { NameLongIdPair } from './nameLongIdPair';
import { UserItemDataDto } from './userItemDataDto';

export interface BaseItemDto { 
    name?: string;
    originalTitle?: string;
    serverId?: string;
    id?: string;
    etag?: string;
    playlistItemId?: string;
    dateCreated?: Date;
    extraType?: string;
    airsBeforeSeasonNumber?: number;
    airsAfterSeasonNumber?: number;
    airsBeforeEpisodeNumber?: number;
    displaySpecialsWithSeasons?: boolean;
    canDelete?: boolean;
    canDownload?: boolean;
    supportsResume?: boolean;
    presentationUniqueKey?: string;
    preferredMetadataLanguage?: string;
    preferredMetadataCountryCode?: string;
    supportsSync?: boolean;
    container?: string;
    sortName?: string;
    forcedSortName?: string;
    video3DFormat?: BaseItemDto.Video3DFormatEnum;
    premiereDate?: Date;
    externalUrls?: Array<ExternalUrl>;
    mediaSources?: Array<MediaSourceInfo>;
    criticRating?: number;
    gameSystemId?: number;
    gameSystem?: string;
    productionLocations?: Array<string>;
    path?: string;
    officialRating?: string;
    customRating?: string;
    channelId?: string;
    channelName?: string;
    overview?: string;
    taglines?: Array<string>;
    genres?: Array<string>;
    communityRating?: number;
    runTimeTicks?: number;
    playAccess?: BaseItemDto.PlayAccessEnum;
    productionYear?: number;
    number?: string;
    channelNumber?: string;
    indexNumber?: number;
    indexNumberEnd?: number;
    parentIndexNumber?: number;
    remoteTrailers?: Array<MediaUrl>;
    providerIds?: { [key: string]: string; };
    isFolder?: boolean;
    parentId?: string;
    type?: string;
    people?: Array<BaseItemPerson>;
    studios?: Array<NameLongIdPair>;
    genreItems?: Array<NameLongIdPair>;
    tagItems?: Array<NameLongIdPair>;
    parentLogoItemId?: string;
    parentBackdropItemId?: string;
    parentBackdropImageTags?: Array<string>;
    localTrailerCount?: number;
    userData?: UserItemDataDto;
    recursiveItemCount?: number;
    childCount?: number;
    seriesName?: string;
    seriesId?: string;
    seasonId?: string;
    specialFeatureCount?: number;
    displayPreferencesId?: string;
    status?: string;
    airTime?: string;
    airDays?: Array<BaseItemDto.AirDaysEnum>;
    tags?: Array<string>;
    primaryImageAspectRatio?: number;
    artists?: Array<string>;
    artistItems?: Array<NameIdPair>;
    album?: string;
    collectionType?: string;
    displayOrder?: string;
    albumId?: string;
    albumPrimaryImageTag?: string;
    seriesPrimaryImageTag?: string;
    albumArtist?: string;
    albumArtists?: Array<NameIdPair>;
    seasonName?: string;
    mediaStreams?: Array<MediaStream>;
    partCount?: number;
    imageTags?: { [key: string]: string; };
    backdropImageTags?: Array<string>;
    parentLogoImageTag?: string;
    seriesStudio?: string;
    parentThumbItemId?: string;
    parentThumbImageTag?: string;
    parentPrimaryImageItemId?: string;
    parentPrimaryImageTag?: string;
    chapters?: Array<ChapterInfo>;
    locationType?: BaseItemDto.LocationTypeEnum;
    mediaType?: string;
    endDate?: Date;
    lockedFields?: Array<BaseItemDto.LockedFieldsEnum>;
    lockData?: boolean;
    width?: number;
    height?: number;
    cameraMake?: string;
    cameraModel?: string;
    software?: string;
    exposureTime?: number;
    focalLength?: number;
    imageOrientation?: BaseItemDto.ImageOrientationEnum;
    aperture?: number;
    shutterSpeed?: number;
    latitude?: number;
    longitude?: number;
    altitude?: number;
    isoSpeedRating?: number;
    seriesTimerId?: string;
    channelPrimaryImageTag?: string;
    startDate?: Date;
    completionPercentage?: number;
    isRepeat?: boolean;
    isNew?: boolean;
    episodeTitle?: string;
    isMovie?: boolean;
    isSports?: boolean;
    isSeries?: boolean;
    isLive?: boolean;
    isNews?: boolean;
    isKids?: boolean;
    isPremiere?: boolean;
    timerId?: string;
    currentProgram?: BaseItemDto;
    movieCount?: number;
    seriesCount?: number;
    albumCount?: number;
    songCount?: number;
    musicVideoCount?: number;
}
export namespace BaseItemDto {
    export type Video3DFormatEnum = 'HalfSideBySide' | 'FullSideBySide' | 'FullTopAndBottom' | 'HalfTopAndBottom' | 'MVC';
    export const Video3DFormatEnum = {
        HalfSideBySide: 'HalfSideBySide' as Video3DFormatEnum,
        FullSideBySide: 'FullSideBySide' as Video3DFormatEnum,
        FullTopAndBottom: 'FullTopAndBottom' as Video3DFormatEnum,
        HalfTopAndBottom: 'HalfTopAndBottom' as Video3DFormatEnum,
        MVC: 'MVC' as Video3DFormatEnum
    };
    export type PlayAccessEnum = 'Full' | 'None';
    export const PlayAccessEnum = {
        Full: 'Full' as PlayAccessEnum,
        None: 'None' as PlayAccessEnum
    };
    export type AirDaysEnum = 'Sunday' | 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday';
    export const AirDaysEnum = {
        Sunday: 'Sunday' as AirDaysEnum,
        Monday: 'Monday' as AirDaysEnum,
        Tuesday: 'Tuesday' as AirDaysEnum,
        Wednesday: 'Wednesday' as AirDaysEnum,
        Thursday: 'Thursday' as AirDaysEnum,
        Friday: 'Friday' as AirDaysEnum,
        Saturday: 'Saturday' as AirDaysEnum
    };
    export type LocationTypeEnum = 'FileSystem' | 'Virtual';
    export const LocationTypeEnum = {
        FileSystem: 'FileSystem' as LocationTypeEnum,
        Virtual: 'Virtual' as LocationTypeEnum
    };
    export type LockedFieldsEnum = 'Cast' | 'Genres' | 'ProductionLocations' | 'Studios' | 'Tags' | 'Name' | 'Overview' | 'Runtime' | 'OfficialRating';
    export const LockedFieldsEnum = {
        Cast: 'Cast' as LockedFieldsEnum,
        Genres: 'Genres' as LockedFieldsEnum,
        ProductionLocations: 'ProductionLocations' as LockedFieldsEnum,
        Studios: 'Studios' as LockedFieldsEnum,
        Tags: 'Tags' as LockedFieldsEnum,
        Name: 'Name' as LockedFieldsEnum,
        Overview: 'Overview' as LockedFieldsEnum,
        Runtime: 'Runtime' as LockedFieldsEnum,
        OfficialRating: 'OfficialRating' as LockedFieldsEnum
    };
    export type ImageOrientationEnum = 'TopLeft' | 'TopRight' | 'BottomRight' | 'BottomLeft' | 'LeftTop' | 'RightTop' | 'RightBottom' | 'LeftBottom';
    export const ImageOrientationEnum = {
        TopLeft: 'TopLeft' as ImageOrientationEnum,
        TopRight: 'TopRight' as ImageOrientationEnum,
        BottomRight: 'BottomRight' as ImageOrientationEnum,
        BottomLeft: 'BottomLeft' as ImageOrientationEnum,
        LeftTop: 'LeftTop' as ImageOrientationEnum,
        RightTop: 'RightTop' as ImageOrientationEnum,
        RightBottom: 'RightBottom' as ImageOrientationEnum,
        LeftBottom: 'LeftBottom' as ImageOrientationEnum
    };
}