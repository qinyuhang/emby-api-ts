/**
 * Emby Server API
 * Explore the Emby Server API
 *
 * OpenAPI spec version: 4.4.0.11
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

export interface MediaStream { 
    codec?: string;
    codecTag?: string;
    language?: string;
    colorTransfer?: string;
    colorPrimaries?: string;
    colorSpace?: string;
    comment?: string;
    streamStartTimeTicks?: number;
    timeBase?: string;
    codecTimeBase?: string;
    title?: string;
    extradata?: string;
    videoRange?: string;
    displayTitle?: string;
    displayLanguage?: string;
    nalLengthSize?: string;
    isInterlaced?: boolean;
    isAVC?: boolean;
    channelLayout?: string;
    bitRate?: number;
    bitDepth?: number;
    refFrames?: number;
    packetLength?: number;
    channels?: number;
    sampleRate?: number;
    isDefault?: boolean;
    isForced?: boolean;
    height?: number;
    width?: number;
    averageFrameRate?: number;
    realFrameRate?: number;
    profile?: string;
    type?: MediaStream.TypeEnum;
    aspectRatio?: string;
    index?: number;
    score?: number;
    isExternal?: boolean;
    deliveryMethod?: MediaStream.DeliveryMethodEnum;
    deliveryUrl?: string;
    isExternalUrl?: boolean;
    isTextSubtitleStream?: boolean;
    supportsExternalStream?: boolean;
    path?: string;
    protocol?: MediaStream.ProtocolEnum;
    pixelFormat?: string;
    level?: number;
    isAnamorphic?: boolean;
}
export namespace MediaStream {
    export type TypeEnum = 'Audio' | 'Video' | 'Subtitle' | 'EmbeddedImage';
    export const TypeEnum = {
        Audio: 'Audio' as TypeEnum,
        Video: 'Video' as TypeEnum,
        Subtitle: 'Subtitle' as TypeEnum,
        EmbeddedImage: 'EmbeddedImage' as TypeEnum
    };
    export type DeliveryMethodEnum = 'Encode' | 'Embed' | 'External' | 'Hls';
    export const DeliveryMethodEnum = {
        Encode: 'Encode' as DeliveryMethodEnum,
        Embed: 'Embed' as DeliveryMethodEnum,
        External: 'External' as DeliveryMethodEnum,
        Hls: 'Hls' as DeliveryMethodEnum
    };
    export type ProtocolEnum = 'File' | 'Http' | 'Rtmp' | 'Rtsp' | 'Udp' | 'Rtp' | 'Ftp' | 'Mms';
    export const ProtocolEnum = {
        File: 'File' as ProtocolEnum,
        Http: 'Http' as ProtocolEnum,
        Rtmp: 'Rtmp' as ProtocolEnum,
        Rtsp: 'Rtsp' as ProtocolEnum,
        Udp: 'Udp' as ProtocolEnum,
        Rtp: 'Rtp' as ProtocolEnum,
        Ftp: 'Ftp' as ProtocolEnum,
        Mms: 'Mms' as ProtocolEnum
    };
}